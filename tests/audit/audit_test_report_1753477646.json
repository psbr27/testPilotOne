{
  "test_run_timestamp": "2025-07-25 17:07:26",
  "summary": {
    "total_tests": 85,
    "total_passed": 69,
    "total_failures": 5,
    "total_errors": 11,
    "total_skipped": 0,
    "pass_rate_percent": 81.17647058823529,
    "execution_time_seconds": 0.47283387184143066
  },
  "module_results": {
    "Engine Tests": {
      "tests_run": 23,
      "failures": 4,
      "errors": 0,
      "skipped": 0,
      "success": false,
      "execution_time": 0.003632783889770508,
      "details": "test_array_order_sensitivity (tests.audit.test_audit_engine.TestAuditEngine.test_array_order_sensitivity)\nTest that array order is significant in strict mode ... ok\ntest_audit_summary_generation (tests.audit.test_audit_engine.TestAuditEngine.test_audit_summary_generation)\nTest audit summary generation ... ok\ntest_case_insensitive_http_methods (tests.audit.test_audit_engine.TestAuditEngine.test_case_insensitive_http_methods)\nTest case insensitive HTTP method validation ... ok\ntest_complex_nested_mismatch (tests.audit.test_audit_engine.TestAuditEngine.test_complex_nested_mismatch)\nTest complex nested JSON with mismatches ... ok\ntest_complex_nested_perfect_match (tests.audit.test_audit_engine.TestAuditEngine.test_complex_nested_perfect_match)\nTest complex nested JSON perfect match ... ok\ntest_empty_pattern_and_response (tests.audit.test_audit_engine.TestAuditEngine.test_empty_pattern_and_response)\nTest empty pattern and response ... ok\ntest_exception_handling_in_validation (tests.audit.test_audit_engine.TestAuditEngine.test_exception_handling_in_validation)\nTest exception handling during validation ... FAIL\ntest_get_and_clear_results (tests.audit.test_audit_engine.TestAuditEngine.test_get_and_clear_results)\nTest getting and clearing audit results ... ok\ntest_http_method_mismatch_fail (tests.audit.test_audit_engine.TestAuditEngine.test_http_method_mismatch_fail)\nTest HTTP method mismatch - should FAIL ... ok\ntest_json_parsing_exception_handling (tests.audit.test_audit_engine.TestAuditEngine.test_json_parsing_exception_handling)\nTest JSON parsing exception handling ... FAIL\ntest_json_pattern_mismatch_fail (tests.audit.test_audit_engine.TestAuditEngine.test_json_pattern_mismatch_fail)\nTest JSON pattern mismatch - should FAIL ... ok\ntest_large_json_objects (tests.audit.test_audit_engine.TestAuditEngine.test_large_json_objects)\nTest handling of large JSON objects ... ok\ntest_malformed_json_pattern_fail (tests.audit.test_audit_engine.TestAuditEngine.test_malformed_json_pattern_fail)\nTest malformed JSON pattern - should FAIL with JSON error ... FAIL\ntest_malformed_json_response_fail (tests.audit.test_audit_engine.TestAuditEngine.test_malformed_json_response_fail)\nTest malformed JSON response - should FAIL with JSON error ... FAIL\ntest_multiple_tests_batch_processing (tests.audit.test_audit_engine.TestAuditEngine.test_multiple_tests_batch_processing)\nTest processing multiple tests in batch ... ok\ntest_multiple_validation_failures (tests.audit.test_audit_engine.TestAuditEngine.test_multiple_validation_failures)\nTest multiple validation failures at once ... ok\ntest_nested_array_with_objects (tests.audit.test_audit_engine.TestAuditEngine.test_nested_array_with_objects)\nTest nested arrays with objects ... ok\ntest_none_values_handling (tests.audit.test_audit_engine.TestAuditEngine.test_none_values_handling)\nTest handling of None values in HTTP validation ... ok\ntest_none_vs_value_mismatch (tests.audit.test_audit_engine.TestAuditEngine.test_none_vs_value_mismatch)\nTest None vs actual value mismatch ... ok\ntest_perfect_match_validation_pass (tests.audit.test_audit_engine.TestAuditEngine.test_perfect_match_validation_pass)\nTest perfect JSON pattern match - should PASS ... ok\ntest_status_code_mismatch_fail (tests.audit.test_audit_engine.TestAuditEngine.test_status_code_mismatch_fail)\nTest HTTP status code mismatch - should FAIL ... ok\ntest_stress_test_many_validations (tests.audit.test_audit_engine.TestAuditEngine.test_stress_test_many_validations)\nStress test with many validations ... ok\ntest_unicode_and_special_characters (tests.audit.test_audit_engine.TestAuditEngine.test_unicode_and_special_characters)\nTest handling of Unicode and special characters ... ok\n\n======================================================================\nFAIL: test_exception_handling_in_validation (tests.audit.test_audit_engine.TestAuditEngine.test_exception_handling_in_validation)\nTest exception handling during validation\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/test_audit_engine.py\", line 514, in test_exception_handling_in_validation\n    self.assertEqual(result[\"overall_result\"], \"FAIL\")\nAssertionError: 'ERROR' != 'FAIL'\n- ERROR\n+ FAIL\n\n\n======================================================================\nFAIL: test_json_parsing_exception_handling (tests.audit.test_audit_engine.TestAuditEngine.test_json_parsing_exception_handling)\nTest JSON parsing exception handling\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/test_audit_engine.py\", line 531, in test_json_parsing_exception_handling\n    self.assertEqual(result[\"overall_result\"], \"FAIL\")\nAssertionError: 'ERROR' != 'FAIL'\n- ERROR\n+ FAIL\n\n\n======================================================================\nFAIL: test_malformed_json_pattern_fail (tests.audit.test_audit_engine.TestAuditEngine.test_malformed_json_pattern_fail)\nTest malformed JSON pattern - should FAIL with JSON error\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/test_audit_engine.py\", line 257, in test_malformed_json_pattern_fail\n    self.assertEqual(result[\"overall_result\"], \"FAIL\")\nAssertionError: 'ERROR' != 'FAIL'\n- ERROR\n+ FAIL\n\n\n======================================================================\nFAIL: test_malformed_json_response_fail (tests.audit.test_audit_engine.TestAuditEngine.test_malformed_json_response_fail)\nTest malformed JSON response - should FAIL with JSON error\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/test_audit_engine.py\", line 273, in test_malformed_json_response_fail\n    self.assertEqual(result[\"overall_result\"], \"FAIL\")\nAssertionError: 'ERROR' != 'FAIL'\n- ERROR\n+ FAIL\n\n\n----------------------------------------------------------------------\nRan 23 tests in 0.004s\n\nFAILED (failures=4)\n"
    },
    "Exporter Tests": {
      "tests_run": 21,
      "failures": 0,
      "errors": 1,
      "skipped": 0,
      "success": false,
      "execution_time": 0.33531808853149414,
      "details": "test_advanced_formatting_applied (tests.audit.test_audit_exporter.TestAuditExporter.test_advanced_formatting_applied)\nTest that advanced formatting is applied to Excel file ... ERROR\ntest_all_required_sheets_created (tests.audit.test_audit_exporter.TestAuditExporter.test_all_required_sheets_created)\nTest that all required sheets are created ... ok\ntest_audit_summary_sheet_content (tests.audit.test_audit_exporter.TestAuditExporter.test_audit_summary_sheet_content)\nTest audit summary sheet contains correct data ... ok\ntest_compliance_report_sheet_content (tests.audit.test_audit_exporter.TestAuditExporter.test_compliance_report_sheet_content)\nTest compliance report sheet content and risk assessment ... ok\ntest_concurrent_export_operations (tests.audit.test_audit_exporter.TestAuditExporter.test_concurrent_export_operations)\nTest concurrent export operations ... ok\ntest_detailed_results_sheet_content (tests.audit.test_audit_exporter.TestAuditExporter.test_detailed_results_sheet_content)\nTest detailed results sheet contains correct data ... ok\ntest_difference_impact_assessment (tests.audit.test_audit_exporter.TestAuditExporter.test_difference_impact_assessment)\nTest difference impact assessment logic ... ok\ntest_differences_analysis_sheet (tests.audit.test_audit_exporter.TestAuditExporter.test_differences_analysis_sheet)\nTest differences analysis sheet for failed tests ... ok\ntest_empty_audit_results (tests.audit.test_audit_exporter.TestAuditExporter.test_empty_audit_results)\nTest export with empty audit results ... ok\ntest_excel_write_failure (tests.audit.test_audit_exporter.TestAuditExporter.test_excel_write_failure)\nTest handling of Excel write failures ... ok\ntest_invalid_output_directory (tests.audit.test_audit_exporter.TestAuditExporter.test_invalid_output_directory)\nTest export with invalid output directory ... ok\ntest_json_formatting_in_cells (tests.audit.test_audit_exporter.TestAuditExporter.test_json_formatting_in_cells)\nTest that JSON data is properly formatted in Excel cells ... ok\ntest_large_dataset_performance (tests.audit.test_audit_exporter.TestAuditExporter.test_large_dataset_performance)\nTest performance with large dataset ... ok\ntest_malformed_audit_data (tests.audit.test_audit_exporter.TestAuditExporter.test_malformed_audit_data)\nTest export with malformed audit data ... ok\ntest_many_differences_handling (tests.audit.test_audit_exporter.TestAuditExporter.test_many_differences_handling)\nTest handling of tests with many differences ... ok\ntest_null_and_none_values (tests.audit.test_audit_exporter.TestAuditExporter.test_null_and_none_values)\nTest handling of null and None values in data ... ok\ntest_permission_denied_directory (tests.audit.test_audit_exporter.TestAuditExporter.test_permission_denied_directory)\nTest export to directory without write permissions ... ok\ntest_risk_assessment_logic (tests.audit.test_audit_exporter.TestAuditExporter.test_risk_assessment_logic)\nTest risk assessment logic in compliance report ... ok\ntest_successful_excel_export_basic (tests.audit.test_audit_exporter.TestAuditExporter.test_successful_excel_export_basic)\nTest basic successful Excel export ... ok\ntest_unicode_and_special_characters (tests.audit.test_audit_exporter.TestAuditExporter.test_unicode_and_special_characters)\nTest export with Unicode and special characters ... ok\ntest_very_large_json_data (tests.audit.test_audit_exporter.TestAuditExporter.test_very_large_json_data)\nTest export with very large JSON data ... ok\n\n======================================================================\nERROR: test_advanced_formatting_applied (tests.audit.test_audit_exporter.TestAuditExporter.test_advanced_formatting_applied)\nTest that advanced formatting is applied to Excel file\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/opt/homebrew/Cellar/python@3.12/3.12.9/Frameworks/Python.framework/Versions/3.12/lib/python3.12/unittest/mock.py\", line 1393, in patched\n    with self.decoration_helper(patched,\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/Cellar/python@3.12/3.12.9/Frameworks/Python.framework/Versions/3.12/lib/python3.12/contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"/opt/homebrew/Cellar/python@3.12/3.12.9/Frameworks/Python.framework/Versions/3.12/lib/python3.12/unittest/mock.py\", line 1375, in decoration_helper\n    arg = exit_stack.enter_context(patching)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/Cellar/python@3.12/3.12.9/Frameworks/Python.framework/Versions/3.12/lib/python3.12/contextlib.py\", line 526, in enter_context\n    result = _enter(cm)\n             ^^^^^^^^^^\n  File \"/opt/homebrew/Cellar/python@3.12/3.12.9/Frameworks/Python.framework/Versions/3.12/lib/python3.12/unittest/mock.py\", line 1467, in __enter__\n    original, local = self.get_original()\n                      ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/Cellar/python@3.12/3.12.9/Frameworks/Python.framework/Versions/3.12/lib/python3.12/unittest/mock.py\", line 1437, in get_original\n    raise AttributeError(\nAttributeError: <module 'src.testpilot.audit.audit_exporter' from '/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/../../src/testpilot/audit/audit_exporter.py'> does not have the attribute 'load_workbook'\n\n----------------------------------------------------------------------\nRan 21 tests in 0.335s\n\nFAILED (errors=1)\n"
    },
    "Processor Tests": {
      "tests_run": 32,
      "failures": 1,
      "errors": 1,
      "skipped": 0,
      "success": false,
      "execution_time": 0.01796102523803711,
      "details": "test_dashboard_integration_failure (tests.audit.test_audit_processor.TestAuditProcessor.test_dashboard_integration_failure)\nTest dashboard integration for failed tests ... ok\ntest_dashboard_integration_success (tests.audit.test_audit_processor.TestAuditProcessor.test_dashboard_integration_success)\nTest dashboard integration for successful tests ... FAIL\ntest_execute_step_command_generic_error (tests.audit.test_audit_processor.TestAuditProcessor.test_execute_step_command_generic_error)\nTest generic command execution error handling ... ok\ntest_execute_step_command_local_success (tests.audit.test_audit_processor.TestAuditProcessor.test_execute_step_command_local_success)\nTest successful local command execution ... ok\ntest_execute_step_command_no_hosts (tests.audit.test_audit_processor.TestAuditProcessor.test_execute_step_command_no_hosts)\nTest command execution with no target hosts ... ok\ntest_execute_step_command_placeholder_replacement (tests.audit.test_audit_processor.TestAuditProcessor.test_execute_step_command_placeholder_replacement)\nTest placeholder replacement in commands ... ok\ntest_execute_step_command_ssh_success (tests.audit.test_audit_processor.TestAuditProcessor.test_execute_step_command_ssh_success)\nTest successful SSH command execution ... ok\ntest_execute_step_command_stderr_handling (tests.audit.test_audit_processor.TestAuditProcessor.test_execute_step_command_stderr_handling)\nTest handling of stderr output ... ok\ntest_execute_step_command_timeout_error (tests.audit.test_audit_processor.TestAuditProcessor.test_execute_step_command_timeout_error)\nTest command execution timeout handling ... ok\ntest_extract_http_method_case_insensitive (tests.audit.test_audit_processor.TestAuditProcessor.test_extract_http_method_case_insensitive)\nTest case insensitive method extraction ... ok\ntest_extract_http_method_complex_curl (tests.audit.test_audit_processor.TestAuditProcessor.test_extract_http_method_complex_curl)\nTest complex curl command with multiple flags ... ok\ntest_extract_http_method_default_get (tests.audit.test_audit_processor.TestAuditProcessor.test_extract_http_method_default_get)\nTest default GET method when no method specified ... ok\ntest_extract_http_method_empty_command (tests.audit.test_audit_processor.TestAuditProcessor.test_extract_http_method_empty_command)\nTest empty command handling ... ok\ntest_extract_http_method_get_explicit (tests.audit.test_audit_processor.TestAuditProcessor.test_extract_http_method_get_explicit)\nTest extracting GET method with -X flag ... ok\ntest_extract_http_method_non_curl_command (tests.audit.test_audit_processor.TestAuditProcessor.test_extract_http_method_non_curl_command)\nTest non-curl command handling ... ok\ntest_extract_http_method_post_explicit (tests.audit.test_audit_processor.TestAuditProcessor.test_extract_http_method_post_explicit)\nTest extracting POST method with -X flag ... ok\ntest_extract_http_method_request_flag (tests.audit.test_audit_processor.TestAuditProcessor.test_extract_http_method_request_flag)\nTest extracting method with --request flag ... ok\ntest_extract_http_method_with_spaces (tests.audit.test_audit_processor.TestAuditProcessor.test_extract_http_method_with_spaces)\nTest HTTP method extraction with extra spaces ... ok\ntest_extract_status_code_empty_output (tests.audit.test_audit_processor.TestAuditProcessor.test_extract_status_code_empty_output)\nTest empty output handling ... ok\ntest_extract_status_code_http_header (tests.audit.test_audit_processor.TestAuditProcessor.test_extract_status_code_http_header)\nTest extracting status code from HTTP header ... ok\ntest_extract_status_code_json_nested (tests.audit.test_audit_processor.TestAuditProcessor.test_extract_status_code_json_nested)\nTest status code extraction from nested JSON ... ok\ntest_extract_status_code_json_response (tests.audit.test_audit_processor.TestAuditProcessor.test_extract_status_code_json_response)\nTest extracting status code from JSON response ... ok\ntest_extract_status_code_malformed_http (tests.audit.test_audit_processor.TestAuditProcessor.test_extract_status_code_malformed_http)\nTest malformed HTTP response ... ok\ntest_extract_status_code_multiple_formats (tests.audit.test_audit_processor.TestAuditProcessor.test_extract_status_code_multiple_formats)\nTest extracting status code with multiple format matches ... ok\ntest_extract_status_code_no_match (tests.audit.test_audit_processor.TestAuditProcessor.test_extract_status_code_no_match)\nTest when no status code found ... ok\ntest_extract_status_code_various_formats (tests.audit.test_audit_processor.TestAuditProcessor.test_extract_status_code_various_formats)\nTest various status code formats ... ok\ntest_extract_status_code_with_extra_text (tests.audit.test_audit_processor.TestAuditProcessor.test_extract_status_code_with_extra_text)\nTest status code extraction with extra surrounding text ... ok\ntest_no_dashboard_handling (tests.audit.test_audit_processor.TestAuditProcessor.test_no_dashboard_handling)\nTest graceful handling when no dashboard provided ... ERROR\ntest_process_single_step_audit_empty_command (tests.audit.test_audit_processor.TestAuditProcessor.test_process_single_step_audit_empty_command)\nTest handling of empty command ... ok\ntest_process_single_step_audit_exception_handling (tests.audit.test_audit_processor.TestAuditProcessor.test_process_single_step_audit_exception_handling)\nTest exception handling in step processing ... ok\ntest_process_single_step_audit_failure (tests.audit.test_audit_processor.TestAuditProcessor.test_process_single_step_audit_failure)\nTest failed single step audit processing ... ok\ntest_process_single_step_audit_success (tests.audit.test_audit_processor.TestAuditProcessor.test_process_single_step_audit_success)\nTest successful single step audit processing ... ok\n\n======================================================================\nERROR: test_no_dashboard_handling (tests.audit.test_audit_processor.TestAuditProcessor.test_no_dashboard_handling)\nTest graceful handling when no dashboard provided\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/test_audit_processor.py\", line 580, in test_no_dashboard_handling\n    process_single_step_audit(\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/../../src/testpilot/audit/audit_processor.py\", line 103, in process_single_step_audit\n    manage_workflow_context(flow, step_data)\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/../../src/testpilot/core/test_pilot_core.py\", line 323, in manage_workflow_context\n    method = step_data[\"method\"]\n             ~~~~~~~~~^^^^^^^^^^\nKeyError: 'method'\n\n======================================================================\nFAIL: test_dashboard_integration_success (tests.audit.test_audit_processor.TestAuditProcessor.test_dashboard_integration_success)\nTest dashboard integration for successful tests\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/opt/homebrew/Cellar/python@3.12/3.12.9/Frameworks/Python.framework/Versions/3.12/lib/python3.12/unittest/mock.py\", line 1396, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/test_audit_processor.py\", line 524, in test_dashboard_integration_success\n    self.assertTrue(test_result.passed)\nAssertionError: False is not true\n\n----------------------------------------------------------------------\nRan 32 tests in 0.018s\n\nFAILED (failures=1, errors=1)\n"
    },
    "Integration Tests": {
      "tests_run": 9,
      "failures": 0,
      "errors": 9,
      "skipped": 0,
      "success": false,
      "execution_time": 0.11495327949523926,
      "details": "test_audit_performance_many_tests (tests.audit.test_audit_integration.TestAuditIntegration.test_audit_performance_many_tests)\nTest audit performance with many test cases ... ERROR\ntest_audit_resilience_partial_failures (tests.audit.test_audit_integration.TestAuditIntegration.test_audit_resilience_partial_failures)\nTest audit system resilience with partial failures ... ERROR\ntest_audit_with_different_host_configurations (tests.audit.test_audit_integration.TestAuditIntegration.test_audit_with_different_host_configurations)\nTest audit with various host configurations ... ERROR\ntest_audit_with_mock_mode (tests.audit.test_audit_integration.TestAuditIntegration.test_audit_with_mock_mode)\nTest audit functionality with mock execution mode ... ERROR\ntest_audit_with_no_hosts (tests.audit.test_audit_integration.TestAuditIntegration.test_audit_with_no_hosts)\nTest audit behavior with no target hosts ... ERROR\ntest_audit_workflow_export_failure_recovery (tests.audit.test_audit_integration.TestAuditIntegration.test_audit_workflow_export_failure_recovery)\nTest audit workflow recovery from export failures ... ERROR\ntest_audit_workflow_with_errors (tests.audit.test_audit_integration.TestAuditIntegration.test_audit_workflow_with_errors)\nTest audit workflow with execution errors ... ERROR\ntest_complete_audit_workflow_success (tests.audit.test_audit_integration.TestAuditIntegration.test_complete_audit_workflow_success)\nTest complete audit workflow with successful results ... ERROR\ntest_complete_audit_workflow_with_failures (tests.audit.test_audit_integration.TestAuditIntegration.test_complete_audit_workflow_with_failures)\nTest complete audit workflow with mixed results ... ERROR\n\n======================================================================\nERROR: test_audit_performance_many_tests (tests.audit.test_audit_integration.TestAuditIntegration.test_audit_performance_many_tests)\nTest audit performance with many test cases\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/opt/homebrew/Cellar/python@3.12/3.12.9/Frameworks/Python.framework/Versions/3.12/lib/python3.12/unittest/mock.py\", line 1396, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/test_audit_integration.py\", line 416, in test_audit_performance_many_tests\n    process_single_step_audit(\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/../../src/testpilot/audit/audit_processor.py\", line 110, in process_single_step_audit\n    logger.info(f\"\ud83d\udd0d [AUDIT] Processing step: {step_data['test_name']}\")\n                                               ~~~~~~~~~^^^^^^^^^^^^^\nKeyError: 'test_name'\n\n======================================================================\nERROR: test_audit_resilience_partial_failures (tests.audit.test_audit_integration.TestAuditIntegration.test_audit_resilience_partial_failures)\nTest audit system resilience with partial failures\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/opt/homebrew/Cellar/python@3.12/3.12.9/Frameworks/Python.framework/Versions/3.12/lib/python3.12/unittest/mock.py\", line 1396, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/test_audit_integration.py\", line 509, in test_audit_resilience_partial_failures\n    process_single_step_audit(\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/../../src/testpilot/audit/audit_processor.py\", line 110, in process_single_step_audit\n    logger.info(f\"\ud83d\udd0d [AUDIT] Processing step: {step_data['test_name']}\")\n                                               ~~~~~~~~~^^^^^^^^^^^^^\nKeyError: 'test_name'\n\n======================================================================\nERROR: test_audit_with_different_host_configurations (tests.audit.test_audit_integration.TestAuditIntegration.test_audit_with_different_host_configurations)\nTest audit with various host configurations\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/test_audit_integration.py\", line 605, in test_audit_with_different_host_configurations\n    process_single_step_audit(\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/../../src/testpilot/audit/audit_processor.py\", line 110, in process_single_step_audit\n    logger.info(f\"\ud83d\udd0d [AUDIT] Processing step: {step_data['test_name']}\")\n                                               ~~~~~~~~~^^^^^^^^^^^^^\nKeyError: 'test_name'\n\n======================================================================\nERROR: test_audit_with_mock_mode (tests.audit.test_audit_integration.TestAuditIntegration.test_audit_with_mock_mode)\nTest audit functionality with mock execution mode\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/opt/homebrew/Cellar/python@3.12/3.12.9/Frameworks/Python.framework/Versions/3.12/lib/python3.12/unittest/mock.py\", line 1396, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/test_audit_integration.py\", line 351, in test_audit_with_mock_mode\n    process_single_step_audit(\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/../../src/testpilot/audit/audit_processor.py\", line 110, in process_single_step_audit\n    logger.info(f\"\ud83d\udd0d [AUDIT] Processing step: {step_data['test_name']}\")\n                                               ~~~~~~~~~^^^^^^^^^^^^^\nKeyError: 'test_name'\n\n======================================================================\nERROR: test_audit_with_no_hosts (tests.audit.test_audit_integration.TestAuditIntegration.test_audit_with_no_hosts)\nTest audit behavior with no target hosts\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/test_audit_integration.py\", line 634, in test_audit_with_no_hosts\n    process_single_step_audit(\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/../../src/testpilot/audit/audit_processor.py\", line 110, in process_single_step_audit\n    logger.info(f\"\ud83d\udd0d [AUDIT] Processing step: {step_data['test_name']}\")\n                                               ~~~~~~~~~^^^^^^^^^^^^^\nKeyError: 'test_name'\n\n======================================================================\nERROR: test_audit_workflow_export_failure_recovery (tests.audit.test_audit_integration.TestAuditIntegration.test_audit_workflow_export_failure_recovery)\nTest audit workflow recovery from export failures\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/opt/homebrew/Cellar/python@3.12/3.12.9/Frameworks/Python.framework/Versions/3.12/lib/python3.12/unittest/mock.py\", line 1396, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/test_audit_integration.py\", line 554, in test_audit_workflow_export_failure_recovery\n    process_single_step_audit(\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/../../src/testpilot/audit/audit_processor.py\", line 110, in process_single_step_audit\n    logger.info(f\"\ud83d\udd0d [AUDIT] Processing step: {step_data['test_name']}\")\n                                               ~~~~~~~~~^^^^^^^^^^^^^\nKeyError: 'test_name'\n\n======================================================================\nERROR: test_audit_workflow_with_errors (tests.audit.test_audit_integration.TestAuditIntegration.test_audit_workflow_with_errors)\nTest audit workflow with execution errors\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/opt/homebrew/Cellar/python@3.12/3.12.9/Frameworks/Python.framework/Versions/3.12/lib/python3.12/unittest/mock.py\", line 1396, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/test_audit_integration.py\", line 296, in test_audit_workflow_with_errors\n    process_single_step_audit(\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/../../src/testpilot/audit/audit_processor.py\", line 110, in process_single_step_audit\n    logger.info(f\"\ud83d\udd0d [AUDIT] Processing step: {step_data['test_name']}\")\n                                               ~~~~~~~~~^^^^^^^^^^^^^\nKeyError: 'test_name'\n\n======================================================================\nERROR: test_complete_audit_workflow_success (tests.audit.test_audit_integration.TestAuditIntegration.test_complete_audit_workflow_success)\nTest complete audit workflow with successful results\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/opt/homebrew/Cellar/python@3.12/3.12.9/Frameworks/Python.framework/Versions/3.12/lib/python3.12/unittest/mock.py\", line 1396, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/test_audit_integration.py\", line 177, in test_complete_audit_workflow_success\n    process_single_step_audit(\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/../../src/testpilot/audit/audit_processor.py\", line 110, in process_single_step_audit\n    logger.info(f\"\ud83d\udd0d [AUDIT] Processing step: {step_data['test_name']}\")\n                                               ~~~~~~~~~^^^^^^^^^^^^^\nKeyError: 'test_name'\n\n======================================================================\nERROR: test_complete_audit_workflow_with_failures (tests.audit.test_audit_integration.TestAuditIntegration.test_complete_audit_workflow_with_failures)\nTest complete audit workflow with mixed results\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/opt/homebrew/Cellar/python@3.12/3.12.9/Frameworks/Python.framework/Versions/3.12/lib/python3.12/unittest/mock.py\", line 1396, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/test_audit_integration.py\", line 247, in test_complete_audit_workflow_with_failures\n    process_single_step_audit(\n  File \"/Users/sarathp/Documents/incubator/testPilotOne/tests/audit/../../tests/audit/../../src/testpilot/audit/audit_processor.py\", line 110, in process_single_step_audit\n    logger.info(f\"\ud83d\udd0d [AUDIT] Processing step: {step_data['test_name']}\")\n                                               ~~~~~~~~~^^^^^^^^^^^^^\nKeyError: 'test_name'\n\n----------------------------------------------------------------------\nRan 9 tests in 0.115s\n\nFAILED (errors=9)\n"
    }
  }
}
