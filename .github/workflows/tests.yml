name: Test Suite

on:
  push:
    branches: [ "*" ]  # Run on push to any branch
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        # Install the package in editable mode so tests can import testpilot
        pip install -e .

    - name: Run Core Tests
      run: |
        echo "ðŸ§ª Running Core Tests (Validation Engine & Response Validator)..."
        python -m pytest tests/core/ -v --tb=short

    - name: Run NRF Tests
      run: |
        echo "ðŸš€ Running NRF Tests (Instance Tracking & Sequence Management)..."
        python -m pytest tests/nrf/ -v --tb=short

    - name: Run Utils Tests
      run: |
        echo "ðŸ”§ Running Utils Tests (Excel Parser & kubectl Logs)..."
        python -m pytest tests/utils/ -v --tb=short

    - name: Run Validation Tests
      run: |
        echo "âœ… Running Validation Tests (Pattern Matching & Fixes)..."
        python -m pytest tests/validation/ -v --tb=short

    - name: Run Mock Tests
      run: |
        echo "ðŸŽ­ Running Mock Tests (Integration & Server)..."
        python -m pytest tests/mock/ -v --tb=short

    - name: Run Exporter Tests
      run: |
        echo "ðŸ“Š Running Exporter Tests (HTML Reports)..."
        python -m pytest tests/exporters/ -v --tb=short

    - name: Generate Test Summary
      run: |
        echo "ðŸ“ˆ Test Summary:"
        python -m pytest tests/ --collect-only -q | tail -1

    - name: Run Critical Path Tests
      run: |
        echo "âš¡ Running Critical Path Tests..."
        python -m pytest tests/ -k "basic or core or main" --maxfail=5 -v

    - name: Test Coverage Report
      run: |
        echo "ðŸ“Š Generating Coverage Report..."
        python -m pytest tests/ --cov=src --cov-report=term --cov-report=xml

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.10'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
